// <auto-generated />
using System;
using Cinema.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20200325183038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cinema.Models.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Cinema.Models.Row", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalonID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalonID");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("Cinema.Models.Salon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TheaterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TheaterID");

                    b.ToTable("Salons");
                });

            modelBuilder.Entity("Cinema.Models.Seat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RowID")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RowID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("Cinema.Models.Theater", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Theaters");
                });

            modelBuilder.Entity("Cinema.Models.Ticket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RowID")
                        .HasColumnType("int");

                    b.Property<int?>("SeatID")
                        .HasColumnType("int");

                    b.Property<int?>("ViewingID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RowID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ViewingID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Cinema.Models.Viewing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmID")
                        .HasColumnType("int");

                    b.Property<int?>("SalonID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("SalonID");

                    b.ToTable("Viewings");
                });

            modelBuilder.Entity("Cinema.Models.Row", b =>
                {
                    b.HasOne("Cinema.Models.Salon", null)
                        .WithMany("Rows")
                        .HasForeignKey("SalonID");
                });

            modelBuilder.Entity("Cinema.Models.Salon", b =>
                {
                    b.HasOne("Cinema.Models.Theater", null)
                        .WithMany("Salons")
                        .HasForeignKey("TheaterID");
                });

            modelBuilder.Entity("Cinema.Models.Seat", b =>
                {
                    b.HasOne("Cinema.Models.Row", null)
                        .WithMany("Seats")
                        .HasForeignKey("RowID");
                });

            modelBuilder.Entity("Cinema.Models.Ticket", b =>
                {
                    b.HasOne("Cinema.Models.Row", "Row")
                        .WithMany()
                        .HasForeignKey("RowID");

                    b.HasOne("Cinema.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatID");

                    b.HasOne("Cinema.Models.Viewing", "Viewing")
                        .WithMany()
                        .HasForeignKey("ViewingID");
                });

            modelBuilder.Entity("Cinema.Models.Viewing", b =>
                {
                    b.HasOne("Cinema.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmID");

                    b.HasOne("Cinema.Models.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonID");
                });
#pragma warning restore 612, 618
        }
    }
}
